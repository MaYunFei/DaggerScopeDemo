// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.example.yunfei.dagger.components;

import android.content.Context;
import com.example.yunfei.GlobalVariable;
import com.example.yunfei.dagger.modules.AppModule;
import com.example.yunfei.dagger.modules.AppModule_ProvideContextFactory;
import com.example.yunfei.dagger.modules.AppModule_ProvideGlobalVariableFactory;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DaggerAppComponent implements AppComponent {
  private Provider<Context> provideContextProvider;

  private Provider<GlobalVariable> provideGlobalVariableProvider;

  private DaggerAppComponent(Builder builder) {
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {
    this.provideContextProvider =
        DoubleCheck.provider(AppModule_ProvideContextFactory.create(builder.appModule));
    this.provideGlobalVariableProvider =
        DoubleCheck.provider(AppModule_ProvideGlobalVariableFactory.create(builder.appModule));
  }

  @Override
  public Context getContext() {
    return provideContextProvider.get();
  }

  @Override
  public GlobalVariable getGlobalVariable() {
    return provideGlobalVariableProvider.get();
  }

  public static final class Builder {
    private AppModule appModule;

    private Builder() {}

    public AppComponent build() {
      if (appModule == null) {
        throw new IllegalStateException(AppModule.class.getCanonicalName() + " must be set");
      }
      return new DaggerAppComponent(this);
    }

    public Builder appModule(AppModule appModule) {
      this.appModule = Preconditions.checkNotNull(appModule);
      return this;
    }
  }
}
